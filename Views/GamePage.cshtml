@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.GamePage>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "Master.cshtml";

    var folderName = @Model.Content.GetPropertyValue("folderName");
    var liveVersionNumber = Model.Content.GetPropertyValue("liveVersionNumber").ToString();
    var testVersionNumber = Model.Content.GetPropertyValue("testVersionNumber").ToString();

    var liveUnityBasePath = "~/scripts/activities/" + folderName + "/v_" + liveVersionNumber;
    var testUnityBasePath = "~/scripts/activities/" + folderName + "/v_" + testVersionNumber;

    var memberService = UmbracoContext.Application.Services.MemberService;
}
<link rel="stylesheet" href="@Url.Content("~/css/playground.css")">
<script src="@Url.Content("~/scripts/UnityProgress.js")"></script>

<header class="bg-playground text-white header-thin">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto text-center">
                <h1>@Umbraco.Field("pageName")</h1>
            </div>
        </div>
    </div>
</header>

<div class="container" id="breadcrumb" style="padding-top:25px">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            @Html.Partial("BreadcrumbFromRoot")
        </div>
    </div>
</div>

@if (memberService.GetAllRoles(Members.GetCurrentMemberId()).Contains("Tester"))
{
<section>
    <div class="container">
        <div class="row">
            <div class="col-md-8 mx-auto">
                @if (Directory.Exists(HttpContext.Current.Server.MapPath(testUnityBasePath)))
                {
                    <h3>Testversion</h3>
                    <p>Rapportera buggar på: <a href="https://trello.com/b/bxd3FFlN/bug-report">Trello</a><br/>
                        Skriv till oss på: <a href="https://zifrotesters.slack.com/">Slack</a></p>

                    <script src="@Url.Content(testUnityBasePath + "/UnityLoader.js")"></script>
                    <script>
                        var gameInstance = UnityLoader.instantiate("testGameContainer",
                        "@Url.Content(testUnityBasePath + "/Builds.json")",
                        { onProgress: UnityProgress });
                    </script>
                    <div class="webgl-content">
                        <div id="testGameContainer" style="width: 100%; height: 401px;"></div>
                        <div class="footer">
                            <button class="btn btn-primary" style="float: right" onclick="gameInstance.SetFullscreen(1)">Fullskärm</button>
                        </div>
                    </div>
                }
                else if(string.IsNullOrEmpty(testVersionNumber))
                {
                    <div class="alert alert-warning">Det finns inget spel tillgängligt för denna aktivitet just nu.</div>
                }
                else
                {
                    <div class="alert alert-danger">Can't find path: @Url.Content(testUnityBasePath)</div>
                }
            </div>
        </div>
    </div>
</section>
}
else
{
<section>
    <div class="container">
        <div class="row">
            <div class="col-md-8 mx-auto">
                @if (string.IsNullOrEmpty(liveVersionNumber))
                {
                    <div class="alert alert-warning">Det finns inget spel tillgängligt för denna aktivitet just nu.</div>
                }
                else if (Model.Content.GetPropertyValue<bool>("premiumOnly") && !memberService.GetAllRoles(Members.GetCurrentMemberId()).Contains("Premium"))
                {
                    <div class="alert alert-warning">Du har inte tillgång till detta spel. Uppgradera!</div>
                }
                else if (Directory.Exists(HttpContext.Current.Server.MapPath(liveUnityBasePath)))
                {
                    <script src="@Url.Content(liveUnityBasePath + "/UnityLoader.js")"></script>
                    <script>
                        var gameInstance = UnityLoader.instantiate("liveGameContainer",
                            "@Url.Content(liveUnityBasePath + "/Builds.json")",
                            { onProgress: UnityProgress });
                    </script>
                    <div class="webgl-content">
                        <div id="liveGameContainer" style="width: 100%; height: 401px;"></div>
                        <div class="footer" style="margin-top: 1rem;">
                            <button class="btn btn-primary" style="float: right" onclick="gameInstance.SetFullscreen(1)">Fullskärm</button>
                        </div>
                    </div>

                }
                else
                {
                    <div class="alert alert-danger">Can't find path: @Url.Content(liveUnityBasePath)</div>
                }
            </div>
        </div>
    </div>
</section>
}

@{
    var teacherHome = Umbraco.TypedContentAtRoot().FirstOrDefault(x => x.DocumentTypeAlias == "teacherHome");
    var teacherActivityOverview = teacherHome.Children().FirstOrDefault(x => x.DocumentTypeAlias == "activityOverview");
    var teacherActivities = teacherActivityOverview.Children();
}

<section id="related-codeguide-items" class="bg-z-gray no-min-height">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto">

				<h3> Kodguide </h3>

                @foreach (var teacherActivity in teacherActivities)
                {
                    var playgroundReference = teacherActivity.GetPropertyValue<IPublishedContent>("PlaygroundActivity");
                    if (Model.Content == playgroundReference)
                    {
                        var codeGuideTagsIntroducing = teacherActivity.GetPropertyValue<string[]>("CodeTagsIntroducing");
                        var codeGuideTagsUsing = teacherActivity.GetPropertyValue<string[]>("CodeTagsUsing");

                        foreach (var codeTag in codeGuideTagsIntroducing)
                        {
                            var contentFromTag = Umbraco.TagQuery.GetContentByTag(codeTag);
                            var tutorialsFromTag = contentFromTag.Where(x => x.DocumentTypeAlias == "tutorialPage");

                            foreach(var tutorial in tutorialsFromTag)
                            {
                                var videoID = tutorial.GetPropertyValue("PresentationVideoTutorialID");
                                <div class="video-container">
                                    <iframe src="https://www.youtube.com/embed/@videoID?rel=0&amp;showinfo=0" frameborder="0" allowfullscreen></iframe>
                                </div>
                            }

                            <a class="btn badge badge-code" href="/kodguide/@codeTag" role="button" target="_blank">
                                @codeTag
                            </a>
                        }
                        foreach (var codeTag in codeGuideTagsUsing)
                        {
                            <a class="btn badge badge-code" href="/kodguide/@codeTag" role="button" target="_blank">
                                @codeTag
                            </a>
                        }
                    }
                }


            </div>
        </div>
    </div>
</section>