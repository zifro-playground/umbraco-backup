@using Zifro.Controllers
@using Zifro.Models
@model ResetPasswordViewModel

@using (Html.BeginUmbracoForm<PasswordController>("HandleResetPassword", null, new { @class = "needs-validation", @novalidate = "novalidate", @id = "reset-password-form" }))
{
    @Html.AntiForgeryToken();

    if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Any())
    {
        <div class="alert alert-danger hide-if-empty" role="alert">
            @Html.ValidationSummary(true)
        </div>
    }

    <fieldset>
        <!-- Email -->
        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "sr-only" })
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email", @required = "required" })
            @Html.ValidationMessageFor(model => model.Email)
            <div class="invalid-feedback">Skriv din epost-adress.</div>
        </div>

        <!-- Password and password confirmation -->
        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "sr-only" })
            @Html.PasswordFor(model => model.Password, new { @class = "form-control", @placeholder = "Lösenord", @required = "required" })
            @Html.ValidationMessageFor(model => model.Password)
            <div class="invalid-feedback">Välj ett lösenord.</div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "sr-only" })
            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @placeholder = "Bekräfta lösenord", @required = "required" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
            <div class="invalid-feedback">Bekräfta lösenord.</div>
        </div>

        <p class="mt-3">
            <input class="btn btn-primary" type="submit" value="Spara lösenord" />
        </p>
    </fieldset>
}