@using Articulate
@using Articulate.Models
@using Umbraco.Core
@using Umbraco.Web
@model Articulate.Models.AuthorListModel
@{
    Layout = "Master.cshtml";
    var asArray = Model.Authors.ToArray();
}

<div class="row">
    <div class="col-s-9">

        <div class="row main">
            <div class="mainContent box">
                <div id="archive">

                    <h1>@Model.Name</h1>

                    <ul class="no-bullets">
                        @for (var i = 0; i < asArray.Length; i++)
                        {
                            <li class="authorlist">
                                
                                <div class="authorname">
                                    @if (!asArray[i].Url.IsNullOrWhiteSpace())
                                    {
                                        <a href="#author-@i">@asArray[i].Name</a>
                                    }
                                    else
                                    {
                                        @asArray[i].Name
                                    }
                                </div>

                                <div class="authorinfo">

                                    @if (!asArray[i].Image.IsNullOrWhiteSpace())
                                    {
                                        var thumbnail = asArray[i].GetCropUrl("authorImage", "thumbnail");
                                        if (!thumbnail.IsNullOrWhiteSpace())
                                        {
                                            <a href="#author-@i"><img class="thumb" src="@thumbnail" alt="@asArray[i].Name" /></a>
                                        }
                                    }
                                    else
                                    {
                                        <img src="//style.anu.edu.au/_anu/4/images/placeholders/person.png" class="thumb"/>
                                    }

                                    <div class="hidden-xs">
                                        Total posts: @asArray[i].PostCount
                                        <br/>
                                        Last post: @(asArray[i].LastPostDate.HasValue ? asArray[i].LastPostDate.Value.ToString("MMMM d, yyyy HH:mm") : "n/a")
                                    </div>
                                    
                                    
                                </div>                                
                            </li>
                        }
                    </ul>


                    @for (var i = 0; i < asArray.Length; i++)
                    {

                        <h2>
                            <a href="@Url.ArticulateAuthorRssUrl(asArray[i])" class="fa fa-rss"><span>RSS</span></a>
                            <a id="author-@i" href="@asArray[i].Url">@asArray[i].Name</a>
                        </h2>

                        @Html.Table(
                        asArray[i].Posts.OrderByDescending(x => x.PublishedDate),
                        new[] { "Date", "Name", "" },
                        new[] { "date", "title", "comments" },
                        @<span>@item.PublishedDate.ToString("yyyy-MM-dd")</span>,
                    @<a href="@item.Url">@item.Name</a>,
                    @<a href="@item.Url#disqus_thread" data-disqus-identifier="@item.Id"></a>)

                    }
                </div>
            </div>
        </div>

    </div>

    @Html.ThemedPartial(Model, "SideWidgets")
</div>